/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolServiceEventDto } from './ToolServiceEventDto';
import {
    ToolServiceEventDtoFromJSON,
    ToolServiceEventDtoFromJSONTyped,
    ToolServiceEventDtoToJSON,
    ToolServiceEventDtoToJSONTyped,
} from './ToolServiceEventDto';

/**
 * 
 * @export
 * @interface ToolTrackerPageDtoToolServiceEventDto
 */
export interface ToolTrackerPageDtoToolServiceEventDto {
    /**
     * 
     * @type {Array<ToolServiceEventDto>}
     * @memberof ToolTrackerPageDtoToolServiceEventDto
     */
    page: Array<ToolServiceEventDto>;
    /**
     * 
     * @type {number}
     * @memberof ToolTrackerPageDtoToolServiceEventDto
     */
    totalItems: number;
    /**
     * 
     * @type {number}
     * @memberof ToolTrackerPageDtoToolServiceEventDto
     */
    currentPage: number;
    /**
     * 
     * @type {number}
     * @memberof ToolTrackerPageDtoToolServiceEventDto
     */
    pageSize: number;
    /**
     * 
     * @type {number}
     * @memberof ToolTrackerPageDtoToolServiceEventDto
     */
    totalPages: number;
    /**
     * 
     * @type {boolean}
     * @memberof ToolTrackerPageDtoToolServiceEventDto
     */
    hasNextPage: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ToolTrackerPageDtoToolServiceEventDto
     */
    hasPreviousPage: boolean;
}

/**
 * Check if a given object implements the ToolTrackerPageDtoToolServiceEventDto interface.
 */
export function instanceOfToolTrackerPageDtoToolServiceEventDto(value: object): value is ToolTrackerPageDtoToolServiceEventDto {
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('totalItems' in value) || value['totalItems'] === undefined) return false;
    if (!('currentPage' in value) || value['currentPage'] === undefined) return false;
    if (!('pageSize' in value) || value['pageSize'] === undefined) return false;
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    if (!('hasNextPage' in value) || value['hasNextPage'] === undefined) return false;
    if (!('hasPreviousPage' in value) || value['hasPreviousPage'] === undefined) return false;
    return true;
}

export function ToolTrackerPageDtoToolServiceEventDtoFromJSON(json: any): ToolTrackerPageDtoToolServiceEventDto {
    return ToolTrackerPageDtoToolServiceEventDtoFromJSONTyped(json, false);
}

export function ToolTrackerPageDtoToolServiceEventDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolTrackerPageDtoToolServiceEventDto {
    if (json == null) {
        return json;
    }
    return {
        
        'page': ((json['page'] as Array<any>).map(ToolServiceEventDtoFromJSON)),
        'totalItems': json['totalItems'],
        'currentPage': json['currentPage'],
        'pageSize': json['pageSize'],
        'totalPages': json['totalPages'],
        'hasNextPage': json['hasNextPage'],
        'hasPreviousPage': json['hasPreviousPage'],
    };
}

export function ToolTrackerPageDtoToolServiceEventDtoToJSON(json: any): ToolTrackerPageDtoToolServiceEventDto {
    return ToolTrackerPageDtoToolServiceEventDtoToJSONTyped(json, false);
}

export function ToolTrackerPageDtoToolServiceEventDtoToJSONTyped(value?: ToolTrackerPageDtoToolServiceEventDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'page': ((value['page'] as Array<any>).map(ToolServiceEventDtoToJSON)),
        'totalItems': value['totalItems'],
        'currentPage': value['currentPage'],
        'pageSize': value['pageSize'],
        'totalPages': value['totalPages'],
        'hasNextPage': value['hasNextPage'],
        'hasPreviousPage': value['hasPreviousPage'],
    };
}

