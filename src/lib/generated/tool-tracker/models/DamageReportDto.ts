/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LendingAgreementDto } from './LendingAgreementDto';
import {
    LendingAgreementDtoFromJSON,
    LendingAgreementDtoFromJSONTyped,
    LendingAgreementDtoToJSON,
    LendingAgreementDtoToJSONTyped,
} from './LendingAgreementDto';
import type { ToolDto } from './ToolDto';
import {
    ToolDtoFromJSON,
    ToolDtoFromJSONTyped,
    ToolDtoToJSON,
    ToolDtoToJSONTyped,
} from './ToolDto';

/**
 * 
 * @export
 * @interface DamageReportDto
 */
export interface DamageReportDto {
    /**
     * 
     * @type {number}
     * @memberof DamageReportDto
     */
    id: number;
    /**
     * 
     * @type {LendingAgreementDto}
     * @memberof DamageReportDto
     */
    lendingAgreement?: LendingAgreementDto;
    /**
     * 
     * @type {ToolDto}
     * @memberof DamageReportDto
     */
    tool?: ToolDto;
    /**
     * 
     * @type {string}
     * @memberof DamageReportDto
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof DamageReportDto
     */
    createdTime: Date;
    /**
     * 
     * @type {number}
     * @memberof DamageReportDto
     */
    createdById: number;
    /**
     * 
     * @type {Date}
     * @memberof DamageReportDto
     */
    modifiedTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof DamageReportDto
     */
    modifiedById?: number;
}

/**
 * Check if a given object implements the DamageReportDto interface.
 */
export function instanceOfDamageReportDto(value: object): value is DamageReportDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdTime' in value) || value['createdTime'] === undefined) return false;
    if (!('createdById' in value) || value['createdById'] === undefined) return false;
    return true;
}

export function DamageReportDtoFromJSON(json: any): DamageReportDto {
    return DamageReportDtoFromJSONTyped(json, false);
}

export function DamageReportDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DamageReportDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'lendingAgreement': json['lendingAgreement'] == null ? undefined : LendingAgreementDtoFromJSON(json['lendingAgreement']),
        'tool': json['tool'] == null ? undefined : ToolDtoFromJSON(json['tool']),
        'description': json['description'] == null ? undefined : json['description'],
        'createdTime': (new Date(json['createdTime'])),
        'createdById': json['createdById'],
        'modifiedTime': json['modifiedTime'] == null ? undefined : (new Date(json['modifiedTime'])),
        'modifiedById': json['modifiedById'] == null ? undefined : json['modifiedById'],
    };
}

export function DamageReportDtoToJSON(json: any): DamageReportDto {
    return DamageReportDtoToJSONTyped(json, false);
}

export function DamageReportDtoToJSONTyped(value?: DamageReportDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'lendingAgreement': LendingAgreementDtoToJSON(value['lendingAgreement']),
        'tool': ToolDtoToJSON(value['tool']),
        'description': value['description'],
        'createdTime': ((value['createdTime']).toISOString()),
        'createdById': value['createdById'],
        'modifiedTime': value['modifiedTime'] == null ? undefined : ((value['modifiedTime']).toISOString()),
        'modifiedById': value['modifiedById'],
    };
}

