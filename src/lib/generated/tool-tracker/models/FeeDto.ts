/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LendingAgreementDto } from './LendingAgreementDto';
import {
    LendingAgreementDtoFromJSON,
    LendingAgreementDtoFromJSONTyped,
    LendingAgreementDtoToJSON,
    LendingAgreementDtoToJSONTyped,
} from './LendingAgreementDto';

/**
 * 
 * @export
 * @interface FeeDto
 */
export interface FeeDto {
    /**
     * 
     * @type {number}
     * @memberof FeeDto
     */
    id: number;
    /**
     * 
     * @type {LendingAgreementDto}
     * @memberof FeeDto
     */
    lendingAgreement: LendingAgreementDto;
    /**
     * 
     * @type {string}
     * @memberof FeeDto
     */
    reason: string;
    /**
     * 
     * @type {number}
     * @memberof FeeDto
     */
    feeAmount: number;
    /**
     * 
     * @type {string}
     * @memberof FeeDto
     */
    status: FeeDtoStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof FeeDto
     */
    createdTime: Date;
    /**
     * 
     * @type {number}
     * @memberof FeeDto
     */
    createdById: number;
    /**
     * 
     * @type {Date}
     * @memberof FeeDto
     */
    modifiedTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof FeeDto
     */
    modifiedById?: number;
}


/**
 * @export
 */
export const FeeDtoStatusEnum = {
    Paid: 'PAID',
    Unpaid: 'UNPAID',
    Disputed: 'DISPUTED'
} as const;
export type FeeDtoStatusEnum = typeof FeeDtoStatusEnum[keyof typeof FeeDtoStatusEnum];


/**
 * Check if a given object implements the FeeDto interface.
 */
export function instanceOfFeeDto(value: object): value is FeeDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('lendingAgreement' in value) || value['lendingAgreement'] === undefined) return false;
    if (!('reason' in value) || value['reason'] === undefined) return false;
    if (!('feeAmount' in value) || value['feeAmount'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('createdTime' in value) || value['createdTime'] === undefined) return false;
    if (!('createdById' in value) || value['createdById'] === undefined) return false;
    return true;
}

export function FeeDtoFromJSON(json: any): FeeDto {
    return FeeDtoFromJSONTyped(json, false);
}

export function FeeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeeDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'lendingAgreement': LendingAgreementDtoFromJSON(json['lendingAgreement']),
        'reason': json['reason'],
        'feeAmount': json['feeAmount'],
        'status': json['status'],
        'createdTime': (new Date(json['createdTime'])),
        'createdById': json['createdById'],
        'modifiedTime': json['modifiedTime'] == null ? undefined : (new Date(json['modifiedTime'])),
        'modifiedById': json['modifiedById'] == null ? undefined : json['modifiedById'],
    };
}

export function FeeDtoToJSON(json: any): FeeDto {
    return FeeDtoToJSONTyped(json, false);
}

export function FeeDtoToJSONTyped(value?: FeeDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'lendingAgreement': LendingAgreementDtoToJSON(value['lendingAgreement']),
        'reason': value['reason'],
        'feeAmount': value['feeAmount'],
        'status': value['status'],
        'createdTime': ((value['createdTime']).toISOString()),
        'createdById': value['createdById'],
        'modifiedTime': value['modifiedTime'] == null ? undefined : ((value['modifiedTime']).toISOString()),
        'modifiedById': value['modifiedById'],
    };
}

