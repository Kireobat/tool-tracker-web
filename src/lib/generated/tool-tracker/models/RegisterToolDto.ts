/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RegisterToolDto
 */
export interface RegisterToolDto {
    /**
     * Name of the tool
     * @type {string}
     * @memberof RegisterToolDto
     */
    name: string;
    /**
     * Serial number of the tool
     * @type {string}
     * @memberof RegisterToolDto
     */
    serial: string;
    /**
     * Type of the tool (must be an ID from toolTypes)
     * @type {number}
     * @memberof RegisterToolDto
     */
    type: number;
    /**
     * Status of the tool
     * @type {string}
     * @memberof RegisterToolDto
     */
    status?: RegisterToolDtoStatusEnum;
}


/**
 * @export
 */
export const RegisterToolDtoStatusEnum = {
    Available: 'AVAILABLE',
    Unavailable: 'UNAVAILABLE',
    Service: 'SERVICE'
} as const;
export type RegisterToolDtoStatusEnum = typeof RegisterToolDtoStatusEnum[keyof typeof RegisterToolDtoStatusEnum];


/**
 * Check if a given object implements the RegisterToolDto interface.
 */
export function instanceOfRegisterToolDto(value: object): value is RegisterToolDto {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('serial' in value) || value['serial'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function RegisterToolDtoFromJSON(json: any): RegisterToolDto {
    return RegisterToolDtoFromJSONTyped(json, false);
}

export function RegisterToolDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterToolDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'serial': json['serial'],
        'type': json['type'],
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function RegisterToolDtoToJSON(json: any): RegisterToolDto {
    return RegisterToolDtoToJSONTyped(json, false);
}

export function RegisterToolDtoToJSONTyped(value?: RegisterToolDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'serial': value['serial'],
        'type': value['type'],
        'status': value['status'],
    };
}

